<?xml version="1.0"?>
<config>
    <modules>
        <Zhao_Cache>
            <version>0.1.0</version>
        </Zhao_Cache>
    </modules>

	<global>
		<code><![CDATA[
interface PageSpeedInterface{
	public function set($name, $var);
	public function get($name, $default);
}

abstract class PageSpeedAbstruct implements PageSpeedInterface{
	protected $_vars = array();

	public function set($name, $var)
	{
		$this->_vars[$name] = $var;
	}

	public function get($name, $var = null)
	{
		return isset( $this->_vars[$name] ) ? $this->_vars[$name] : $default;
	}
}

class PageSpeedRequestException extends Exception{}

final class PageSpeedConfig extends PageSpeedAbstruct
{
	const CACHE_PATH = 'cache';	
	const BUFFER_POOL = 'html';	
	const MAGE_XML = 'Mage.xml';

	public static function getPath()
	{
		return getcwd() .'/'. self::CACHE_PATH;
	}

	public static function getBufferPool()
	{
		return self::getPath() .'/'. self::BUFFER_POOL;
	}

	public static function getMageXml()
	{
		return self::getPath() .'/'. self::MAGE_XML;
	}
}

final class PageSpeedMage extends PageSpeedAbstruct
{
	public static $_xml = null;

	static function load()
	{
		if (is_null ( self::$_xml ) || isset ( self::$_xml )) {

			if( !file_exists( PageSpeedConfig::getMageXml() ) ) {
				throw new PageSpeedRequestException('Mage.xml not exists.');
			}
			
			self::$_xml = simplexml_load_file(PageSpeedConfig::getMageXml());
		}

		return self::$_xml;
	}

	public static function adminRoute()
	{
		self::load();
		return (string) self::$_xml->admin->routers->adminhtml->args->frontName;
	}

	public static function defaultCurrencyCode()
	{
		self::load();
		return (string) self::$_xml->default->currency->options->default;
	}
}

final class PageSpeedRequest extends PageSpeedAbstruct
{
	protected static $mobileAgents = Array(
			"mqqbrowser",
			"opera mobi",
			"juc","iuc",
			"fennec","ios","applewebKit/420","applewebkit/525","applewebkit/532","ipad","iphone","ipaq","ipod",
			"iemobile", "windows ce",//windows phone
			"240x320","480x640","acer","android","anywhereyougo.com","asus","audio","blackberry",
			"blazer","coolpad" ,"dopod", "etouch", "hitachi","htc","huawei", "jbrowser", "lenovo",
			"lg","lg-","lge-","lge", "mobi","moto","nokia","phone","samsung","sony",
			"symbian","tablet","tianyu","wap","xda","xde","zte"
	);

	public static function env($key)
	{
		return isset( $_SERVER[$key] ) ? $_SERVER[$key] : false;	
	}

	public static function cookie($key)
	{
		return isset( $_COOKIE[$key] ) ? $_COOKIE[$key] : false;	
	}

	public static function getCurrentURL()
	{
		return (self::env('SERVER_PORT') == 443 ? 'https://' : "http://") . self::env('HTTP_HOST') . self::env('REQUEST_URI');
	}

	public static function getCurrencyCode()
	{
		return self::cookie('currency') ? self::cookie('currency') : PageSpeedMage::defaultCurrencyCode();
	}

	public static function hasMobileRequest(){
		$user_agent = self::env('HTTP_USER_AGENT');

		$bool = false;

		foreach (self::$mobileAgents as $device) {
			if (stristr($user_agent, $device)) {
				$bool = true;
				break;
			}
		}

		return $bool;		
	}

	public static function hasBackendRequest()
	{
		return (bool) strpos(self::getCurrentURL(), PageSpeedMage::adminRoute());
	}
}

class PageSpeedCache extends PageSpeedAbstruct
{

	public static function read()
	{
		if( PageSpeedRequest::hasBackendRequest() ) {
			throw new PageSpeedRequestException('backend request.');
		}

		$cacefile = sprintf('%s/%s%s_%s', 
			PageSpeedConfig::getBufferPool(), 
			md5(PageSpeedRequest::getCurrentURL()),
			PageSpeedRequest::hasMobileRequest() ? '_mobile' : '',
			PageSpeedRequest::getCurrencyCode()
		);

		if( !is_readable($cacefile) || !filesize($cacefile) ) {
			throw new PageSpeedRequestException('cache not exists.');
		}

		readfile($cacefile);	
	}
}

try {
	PageSpeedCache::read();
} catch (Exception $e) {
	include 'index.php';
}
		]]></code>
		<htaccess><![CDATA[
Order deny,allow
Deny from all
		]]></htaccess>
	</global>

</config>